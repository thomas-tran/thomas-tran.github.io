{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/message-dialog/message-dialog.component.html","webpack:///./src/app/message-dialog/message-dialog.component.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/upload-demo/upload-demo.component.css","webpack:///./src/app/upload-demo/upload-demo.component.html","webpack:///./src/app/upload-demo/upload-demo.component.ts","webpack:///./src/app/upload-sign/upload-sign.component.css","webpack:///./src/app/upload-sign/upload-sign.component.html","webpack:///./src/app/upload-sign/upload-sign.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-sidebar></app-sidebar>\"","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule,MatSelectModule, MatListModule, MatInputModule, MatCardModule ,MatSnackBarModule, MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS, MatProgressBarModule} from '@angular/material';\r\nimport { UploadDemoComponent } from './upload-demo/upload-demo.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MessageDialogComponent } from './message-dialog/message-dialog.component';\r\nimport { UploadSignComponent } from './upload-sign/upload-sign.component';\r\nconst appRoutes: Routes = [\r\n  { path: 'upload-demo', component: UploadDemoComponent },\r\n  { path: 'upload-sign', component: UploadSignComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarComponent,\r\n    UploadDemoComponent,\r\n    MessageDialogComponent,\r\n    UploadSignComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatProgressBarModule,\r\n    MatSnackBarModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    MaterialFileInputModule\r\n  ],\r\n  providers: [ {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true}}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  //Need this for Material dialog\r\n  entryComponents: [\r\n    MessageDialogComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h2 mat-dialog-title>Message</h2>\\r\\n<mat-dialog-content>\\r\\n    {{data.result.message}} \\r\\n     <br /> {{data.result.value}}\\r\\n\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" mat-dialog-close>OK</button>\\r\\n\\r\\n</mat-dialog-actions>\"","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\r\n\r\n@Component({\r\n    selector: 'message-dialog-component',\r\n    templateUrl: 'message-dialog.component.html',\r\n})\r\nexport class MessageDialogComponent implements OnInit {\r\n    ngOnInit(): void {\r\n        console.log(this.data);\r\n    }\r\n    public dialogRef: MatDialogRef<MessageDialogComponent>\r\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n}","module.exports = \".sidenav-container {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n.mat-toolbar.mat-primary {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav\\r\\n    #drawer\\r\\n    class=\\\"sidenav\\\"\\r\\n    fixedInViewport=\\\"true\\\"\\r\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item routerLink=\\\"/upload-demo\\\">Upload demo 1</a>\\r\\n      <a mat-list-item routerLink=\\\"/upload-sign\\\">Upload demo 2</a>\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\"\\r\\n        *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n      <span>Angular Promimax Storage demo</span>\\r\\n    </mat-toolbar>\\r\\n    <!-- Add Content Here -->\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n    \r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n  \r\n  }\r\n","module.exports = \".card-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n    margin:10px;\\r\\n  }\\r\\n  .card-header {\\r\\n    margin: 0px;\\r\\n   }\\r\\n  .card-content {\\r\\n      margin: 10px;\\r\\n  }\\r\\n  .card-content > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .card-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .drop-zone {\\r\\n    margin: auto;\\r\\n    height: 100px;\\r\\n    border: 2px dotted #0782d0;\\r\\n    \\r\\n  }\"","module.exports = \"<form [formGroup]=\\\"fileUploadForm\\\">\\r\\n    <mat-card class=\\\"card-form\\\">\\r\\n        <mat-card-header class=\\\"card-header\\\">\\r\\n            <mat-card-title>Upload demo</mat-card-title>\\r\\n            <mat-card-subtitle>\\r\\n                Upload file to IPFS network </mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"card-content\\\">\\r\\n            <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Select upload types\\\" formControlName=\\\"inSelect\\\" (selectionChange)=\\\"onSelectChange($event)\\\">\\r\\n                    <mat-option>None</mat-option>\\r\\n                    <mat-option value=\\\"text\\\">Text</mat-option>\\r\\n                    <mat-option value=\\\"base64\\\">Base64</mat-option>\\r\\n                    <mat-option value=\\\"binary\\\">Binary</mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Title\\\" formControlName=\\\"inTitle\\\" required>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Keywords (seperated by comma)\\\" formControlName=\\\"inKeywords\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <textarea matInput placeholder=\\\"Metadata in JSON Format\\\" formControlName=\\\"inMetadata\\\"></textarea>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <mat-form-field *ngIf=\\\"showText\\\">\\r\\n                <textarea matInput placeholder=\\\"Enter text\\\" formControlName=\\\"inText\\\" required></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field *ngIf=\\\"showText\\\">\\r\\n                <input matInput placeholder=\\\"Encoding\\\" formControlName=\\\"inEncoding\\\" value=\\\"UTF-8\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field *ngIf=\\\"showFile\\\">\\r\\n                <ngx-mat-file-input formControlName=\\\"fileUpload\\\" placeholder=\\\"Select file\\\" valuePlaceholder=\\\"No file selected\\\" required></ngx-mat-file-input>\\r\\n            </mat-form-field>\\r\\n            <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"showProgressBar\\\"></mat-progress-bar>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!fileUploadForm.valid\\\" (click)=\\\"onUpload()\\\">Upload</button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"multihashForm\\\" (ngSubmit)=\\\"onUploadCleanup()\\\">\\r\\n    <mat-card class=\\\"card-form\\\">\\r\\n        <mat-card-header class=\\\"card-header\\\">\\r\\n            <mat-card-title>Upload Clean Up</mat-card-title>\\r\\n            <mat-card-subtitle>\\r\\n                Calls the garbage clean up and tries to unpin the given hash</mat-card-subtitle>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content class=\\\"card-content\\\">\\r\\n            <mat-form-field class=\\\"card-full-width\\\">\\r\\n                <input matInput placeholder=\\\"Enter multihash\\\" value=\\\"\\\" formControlName=\\\"multihash\\\" required>\\r\\n            </mat-form-field>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!multihashForm.valid\\\">Clean up</button>\\r\\n\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n</form>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RemoteUploadService, UploadTextRequest, UploadBinaryRequest } from 'angular-xpx-lib';\r\n\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { encode } from 'typescript-base64-arraybuffer';\r\nimport { MessageDialogComponent } from '../message-dialog/message-dialog.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-upload-demo',\r\n  templateUrl: './upload-demo.component.html',\r\n  styleUrls: ['./upload-demo.component.css']\r\n\r\n})\r\nexport class UploadDemoComponent implements OnInit {\r\n\r\n  baseURL = 'https://testnet2.gateway.proximax.io/';\r\n  file: any;\r\n\r\n  showText = false;\r\n  showFile = false;\r\n  showProgressBar = false;\r\n  constructor(private service: RemoteUploadService, private fb: FormBuilder, public dialog: MatDialog) { }\r\n\r\n  multihashForm = this.fb.group({\r\n    multihash: ['', Validators.required]\r\n  });\r\n\r\n  fileUploadForm = this.fb.group({\r\n    fileUpload: [\r\n      undefined,\r\n      [Validators.required]\r\n    ],\r\n    inTitle: [\r\n      '',\r\n      [Validators.required]\r\n    ],\r\n    inKeywords: [''],\r\n    inMetadata: [''],\r\n    inText: ['', [Validators.required]],\r\n    inSelect: [''],\r\n    inEncoding: ['']\r\n  });\r\n\r\n\r\n  ngOnInit() {\r\n    this.service.setBaseUrl(this.baseURL);\r\n  }\r\n\r\n  /**\r\n   * Multihash\r\n   */\r\n  onUploadCleanup() {\r\n    console.log(this.multihashForm.value.multihash);\r\n    this.service.uploadCleanup(this.multihashForm.value.multihash).subscribe((response) => {\r\n\r\n      const msgDialog = this.dialog.open(MessageDialogComponent, {\r\n        data: {\r\n          result: {\r\n            message: response.message,\r\n            value: response.status\r\n          }\r\n        },\r\n      });\r\n      console.log(response);\r\n\r\n    });\r\n  }\r\n\r\n  onSelectChange(ev) {\r\n    console.log(ev.value);\r\n    switch (ev.value) {\r\n      case 'text':\r\n        this.showText = true;\r\n        this.showFile = false;\r\n        this.fileUploadForm.controls.fileUpload.disable();\r\n        this.fileUploadForm.controls.inText.enable();\r\n        break;\r\n      case 'base64':\r\n      case 'binary':\r\n        this.showText = false;\r\n        this.showFile = true;\r\n        this.fileUploadForm.controls.fileUpload.enable();\r\n        this.fileUploadForm.controls.inText.disable();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onUpload() {\r\n    const selectedType = this.fileUploadForm.controls.inSelect.value;\r\n    const title = this.fileUploadForm.controls.inTitle.value;\r\n    const keywords = this.fileUploadForm.controls.inKeywords.value;\r\n    const metadata = this.fileUploadForm.controls.inMetadata.value;\r\n\r\n    console.log(selectedType);\r\n    this.showProgressBar = true;\r\n    switch (selectedType) {\r\n      case 'text':\r\n        const data = this.fileUploadForm.controls.inText.value;\r\n\r\n        const encoding = this.fileUploadForm.controls.inEncoding.value;\r\n        const payload = new UploadTextRequest(title, data, keywords, metadata, 'text/plain', encoding);\r\n\r\n        this.service.uploadText(payload).subscribe((response) => {\r\n          this.showProgressBar = false;\r\n          const msgDialog = this.dialog.open(MessageDialogComponent, {\r\n            data: {\r\n              result: {\r\n                message: 'Your IFPS datahash value is ',\r\n                value: response\r\n              }\r\n            },\r\n          });\r\n          this.fileUploadForm.reset();\r\n          console.log(response);\r\n        });\r\n\r\n        break;\r\n      case 'binary':\r\n      case 'base64':\r\n        const fileReader = new FileReader();\r\n\r\n        const inputFiles = this.fileUploadForm.value.fileUpload;\r\n\r\n        // console.log(inputFiles);\r\n        this.file = inputFiles.files[0];\r\n        const fileType = this.file.type;\r\n\r\n        fileReader.readAsArrayBuffer(this.file);\r\n\r\n        fileReader.onload = (e) => {\r\n\r\n          const arrayBuffer = fileReader.result;\r\n\r\n          let payloadData: any;\r\n\r\n          // if binary file , need to convert to bytes array\r\n          if (selectedType === 'binary') {\r\n            payloadData = [];\r\n            const base64Data = encode(arrayBuffer);\r\n\r\n            for (let i = 0; i < base64Data.length; i++) {\r\n              payloadData.push(base64Data.charCodeAt(i));\r\n            }\r\n\r\n            const uploadBinRequest = new UploadBinaryRequest(title, payloadData, keywords, metadata, fileType);\r\n\r\n            this.service.uploadBinary(uploadBinRequest).subscribe((response) => {\r\n              this.showProgressBar = false;\r\n              const msgDialog = this.dialog.open(MessageDialogComponent, {\r\n                data: {\r\n                  result: {\r\n                    message: 'Your IFPS datahash value is ',\r\n                    value: response\r\n                  }\r\n                },\r\n              });\r\n              this.fileUploadForm.reset();\r\n            });\r\n\r\n          } else {\r\n\r\n            const base64Data = encode(arrayBuffer);\r\n\r\n            const uploadBinRequest = new UploadBinaryRequest(title, base64Data, keywords, metadata, fileType);\r\n\r\n            this.service.uploadBase64Binary(uploadBinRequest).subscribe((response) => {\r\n              this.showProgressBar = false;\r\n              const msgDialog = this.dialog.open(MessageDialogComponent, {\r\n                data: {\r\n                  result: {\r\n                    message: 'Your IFPS datahash value is ',\r\n                    value: response\r\n                  }\r\n                },\r\n              });\r\n              this.fileUploadForm.reset();\r\n            });\r\n          }\r\n        };\r\n        break;\r\n    }\r\n  }\r\n}\r\n","module.exports = \".card-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n    margin:10px;\\r\\n  }\\r\\n  .card-header {\\r\\n    margin: 0px;\\r\\n   }\\r\\n  .card-content {\\r\\n      margin: 10px;\\r\\n  }\\r\\n  .card-content > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .card-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  .drop-zone {\\r\\n    margin: auto;\\r\\n    height: 100px;\\r\\n    border: 2px dotted #0782d0;\\r\\n    \\r\\n  }\"","module.exports = \"<form [formGroup]=\\\"fileUploadForm\\\">\\r\\n  <mat-card class=\\\"card-form\\\">\\r\\n    <mat-card-header class=\\\"card-header\\\">\\r\\n      <mat-card-title>Upload demo</mat-card-title>\\r\\n      <mat-card-subtitle>\\r\\n        Upload file to IPFS network and Sign</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content class=\\\"card-content\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Account Private Key\\\" formControlName=\\\"inPrivateKey\\\" required>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Account Public Key\\\" formControlName=\\\"inPublicKey\\\" required>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Keywords (seperated by comma)\\\" formControlName=\\\"inKeywords\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <textarea matInput placeholder=\\\"Metadata in JSON Format\\\" formControlName=\\\"inMetadata\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <mat-select  placeholder=\\\"Select message type\\\" formControlName=\\\"inSelect\\\">\\r\\n          <mat-option value=\\\"PLAIN\\\">PLAIN</mat-option>\\r\\n          <mat-option value=\\\"SECURE\\\">SECURE</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <ngx-mat-file-input formControlName=\\\"fileUpload\\\" placeholder=\\\"Select file\\\" valuePlaceholder=\\\"No file selected\\\" required></ngx-mat-file-input>\\r\\n      </mat-form-field>\\r\\n      <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"showProgressBar\\\"></mat-progress-bar>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!fileUploadForm.valid\\\" (click)=\\\"onUpload()\\\">Upload</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n\\r\\n</form>\\r\\n\\r\\n<form [formGroup]=\\\"signedAnnounceForm\\\" *ngIf=\\\"showSignedAnnounce\\\">\\r\\n  <mat-card class=\\\"card-form\\\">\\r\\n    <mat-card-header class=\\\"card-header\\\">\\r\\n      <mat-card-title>Announce Transaction</mat-card-title>\\r\\n      <mat-card-subtitle>\\r\\n        Announce data signagture</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content class=\\\"card-content\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <textarea matInput placeholder=\\\"\\\" formControlName=\\\"inAnnounce\\\" required minRows=\\\"20\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"showProgressBar2\\\"></mat-progress-bar>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!signedAnnounceForm.valid\\\" (click)=\\\"onAnnounce()\\\">Announce</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RemoteUploadService, SignedTransaction, RemoteTransactionAnnounceService, MessageType } from 'angular-xpx-lib';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { MessageDialogComponent } from '../message-dialog/message-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-upload-sign',\r\n  templateUrl: './upload-sign.component.html',\r\n  styleUrls: ['./upload-sign.component.css']\r\n})\r\nexport class UploadSignComponent implements OnInit {\r\n\r\n  baseURL = 'https://testnet2.gateway.proximax.io/';\r\n  file: any;\r\n\r\n\r\n  showSignedAnnounce = true;\r\n  showProgressBar = false;\r\n  showProgressBar2 = false;\r\n\r\n  constructor(private service: RemoteUploadService, private announceService: RemoteTransactionAnnounceService,\r\n    private fb: FormBuilder, public dialog: MatDialog) { }\r\n\r\n  fileUploadForm = this.fb.group({\r\n    fileUpload: [\r\n      undefined,\r\n      [Validators.required]\r\n    ],\r\n    inPrivateKey: [\r\n      '',\r\n      [Validators.required]\r\n    ],\r\n    inKeywords: [''],\r\n    inMetadata: [''],\r\n    inPublicKey: ['', [Validators.required]],\r\n    inSelect: ['', [Validators.required]],\r\n\r\n  });\r\n\r\n\r\n  protected signedAnnounceForm = this.fb.group({\r\n\r\n    inAnnounce: [\r\n      '',\r\n      [Validators.required]\r\n    ]\r\n\r\n\r\n  });\r\n\r\n  ngOnInit() {\r\n    this.service.setBaseUrl(this.baseURL);\r\n  }\r\n\r\n  onUpload() {\r\n    this.showProgressBar = true;\r\n    const selectedType = this.fileUploadForm.controls.inSelect.value;\r\n    const pkey = this.fileUploadForm.controls.inPrivateKey.value;\r\n    const pubKey = this.fileUploadForm.controls.inPublicKey.value;\r\n    const keywords = this.fileUploadForm.controls.inKeywords.value;\r\n    const metadata = this.fileUploadForm.controls.inMetadata.value;\r\n    const inputFiles = this.fileUploadForm.value.fileUpload;\r\n    const file = inputFiles.files[0];\r\n\r\n\r\n    this.service.uploadGenerateSign(pkey, pubKey, selectedType, file, keywords, metadata).subscribe(\r\n\r\n      (response) => {\r\n        this.showProgressBar = false;\r\n        console.log(response);\r\n        this.signedAnnounceForm.controls.inAnnounce.setValue(JSON.stringify(response, null, 2));\r\n\r\n        this.fileUploadForm.reset();\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  onAnnounce() {\r\n    this.showProgressBar2 = true;\r\n    try {\r\n      const data = JSON.parse(this.signedAnnounceForm.controls.inAnnounce.value);\r\n      const payload = new SignedTransaction(data.data, data.signature);\r\n      this.announceService.transactionAnnounce(payload).subscribe((response) => {\r\n        console.log(response);\r\n        this.dialog.open(MessageDialogComponent, {\r\n          data: {\r\n            result: {\r\n              message: 'Your NEM hash value is ',\r\n              value: response.data\r\n            }\r\n          },\r\n        });\r\n        this.showProgressBar2 = false;\r\n      });\r\n    } catch {\r\n      console.log('Not in JSON');\r\n    }\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}